-- From SYS user ----------------------------------------------------------------

-- schema owner
create tablespace testtblspc datafile '/oracle/DB/oradata/test/testtblspc.dbf' size 100M extent management local autoallocate;
create user schemaowner identified by schemaowner  default tablespace testtblspc;
grant create session to schemaowner;
grant connect to schemaowner;
grant resource to schemaowner;
grant select_catalog_role to schemaowner;

-- jru_role
create role jru_role not identified;

-- JPA technical user
create user jpauser identified by jpauser default tablespace testtblspc;
grant create session to jpauser;
grant connect to jpauser;
grant resource to jpauser;
grant jru_role to jpauser;


--- From schemaowner user --------------------------------------------------------

-- JRU_SEQ sequence
create sequence JRU_SEQ
start with 1
increment by 1
cache 100
order;

grant select on SCHEMAOWNER.JRU_SEQ to jru_role;


-- Create table
create table JRU_TBL
(
  id  NUMBER not null,
  txt VARCHAR2(512) not null
)
tablespace TESTTBLSPC
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 10M
    minextents 1
    maxextents unlimited
  );
-- Add comments to the table
comment on table JRU_TBL
  is 'JRU Test Table';
-- Add comments to the columns
comment on column JRU_TBL.id
  is 'Primary Key';
comment on column JRU_TBL.txt
  is 'Test Data';
-- Create/Recreate primary, unique and foreign key constraints
alter table JRU_TBL
  add constraint JRU_TBL_PK primary key (ID)
  using index
  tablespace TESTTBLSPC
  pctfree 10
  initrans 2
  maxtrans 255;


-- Trigger for JRU_TBL.ID
create or replace trigger JRU_TBL_BI
  before insert
  on JRU_TBL
  for each row
declare
begin
  SELECT JRU_SEQ.NEXTVAL
  INTO   :new.id
  FROM   dual;
end JRU_TBL_BI;


-- Create table
create table JRU_JRNL
(
  id              NUMBER(10) not null,
  jru_tbl_id      NUMBER(10) not null,
  old_value       VARCHAR2(512),
  new_value       VARCHAR2(512),
  ora_user        VARCHAR2(50) not null,
  jpa_user        VARCHAR2(50) not null,
  mod_timestamp   TIMESTAMP(6) not null
)
tablespace TESTTBLSPC
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 10M
  );
-- Add comments to the table
comment on table JRU_JRNL
  is 'JRU Test Journal table';
-- Add comments to the columns
comment on column JRU_JRNL.id
  is 'Primary key';
comment on column JRU_JRNL.jru_tbl_id
  is 'JRU table ID';
comment on column JRU_JRNL.old_value
  is 'Old value';
comment on column JRU_JRNL.new_value
  is 'New value';
comment on column JRU_JRNL.ora_user
  is 'Oracle level user';
comment on column JRU_JRNL.jpa_user
  is 'JPA level user';
comment on column JRU_JRNL.mod_timestamp
  is 'Change date';
-- Create/Recreate indexes
create index JRU_JRNL_IX_MODDAT on JRU_JRNL (MOD_TIMESTAMP)
  tablespace TESTTBLSPC
  pctfree 10
  initrans 2
  maxtrans 255;
create index JRU_JRNL__IX_JRU_ID on JRU_JRNL (jru_tbl_id)
  tablespace TESTTBLSPC
  pctfree 10
  initrans 2
  maxtrans 255;
-- Create/Recreate primary, unique and foreign key constraints
alter table JRU_JRNL
  add constraint JRU_JNR_PK primary key (ID)
  using index
  tablespace TESTTBLSPC
  pctfree 10
  initrans 2
  maxtrans 255;
alter table JRU_JRNL
  add constraint JRU_TBL_ID_UNQ foreign key (jru_tbl_id)
  references JRU_TBL (ID);

-- Trigger for JRU_JRNL
create or replace trigger JRU_TBL_JRN
  after insert or update or delete on JRU_TBL
  for each row
declare
begin
  INSERT INTO JRU_JRNL
    (JRU_TBL_ID, OLD_VALUE, NEW_VALUE, ORA_USER, JPA_USER, MOD_TIMESTAMP)
  VALUES
    (:new.id,
     :old.txt,
     :new.txt,
     (select user as ora_user from dual),
     NVL((SELECT SYS_CONTEXT('userenv', 'client_identifier') AS JPA_USER
           FROM dual),
         '! client_identifier not set !'),

     SYSDATE);
EXCEPTION
  WHEN OTHERS THEN
    INSERT INTO JRU_JRNL
      (JRU_TBL_ID, OLD_VALUE, NEW_VALUE)
    VALUES
      (:new.id, 'ERROR', 'ERROR');
end JRU_TBL_JRN;




-- table's grants
GRANT SELECT, INSERT, UPDATE, DELETE ON JRU_TBL to jru_role;